java class Solution { public int[] searchRange(int[] nums, int target) { int left = 0; int right = nums.length - 1; while (left <= right) { int mid = left + (right - left) / 2; if (nums[mid] == target) { left = mid + 1; }else if (nums[mid] > target) { right = mid - 1; }else if (nums[mid] < target) { left = mid + 1; } } if (right < 0 || nums[right] != target) { return new int[]{-1, -1}; } if (right == 0) { return new int[]{right, right}; } int afterRight = right; left = 0; while (left <= afterRight) { int mid = left + (afterRight - left) / 2; if (nums[mid] == target) { afterRight = mid - 1; } else if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] > target) { afterRight = mid - 1; } } if (left >= right || nums[left] != target) { return new int[]{right, right}; } return new int[] {left, right}; } } 