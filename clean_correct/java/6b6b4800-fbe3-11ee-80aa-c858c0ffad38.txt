java class Solution { public int[] searchRange(int[] nums, int target) { int left = searchLeft(nums, target); if (left == -1) { return new int[]{-1, -1}; } int right = searchRight(nums, target); return new int[]{left, right}; } private int searchRight(int[] nums, int target) { int left = 0; int right = nums.length - 1; while (left < right) { int mid = (left + right + 1) >>> 1; if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] == target) { left = mid; } else { right = mid - 1; } } return right; } private int searchLeft(int[] nums, int target) { int left = 0; int right = nums.length - 1; while (left < right) { int mid = (left + right) >>> 1; if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] == target) { right = mid; } else { right = mid - 1; } } if (nums[left] == target) { return left; } return -1; } } 