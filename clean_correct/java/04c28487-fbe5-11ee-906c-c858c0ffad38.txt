java class Solution { int max = 0; int min = Integer.MAX_VALUE; boolean flag = false; public int[] searchRange(int[] nums, int target) { helper(nums, target, 0, nums.length - 1); if(flag == true){ return new int[]{min,max}; } else{ return new int[]{-1,-1}; } } public void helper(int[] nums, int target, int low, int high) { if (low <= high) { int mid = (high - low) / 2 + low; if (nums[mid] == target) { flag = true; max = Math.max(max,mid); min = Math.min(min,mid); helper(nums, target, low, mid - 1); helper(nums, target, mid + 1, high); } else if (nums[mid] > target) { helper(nums, target, low, mid - 1); } else { helper(nums, target, mid + 1, high); } } } } 