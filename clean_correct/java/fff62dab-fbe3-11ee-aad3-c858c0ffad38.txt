java class Solution { public int[] searchRange(int[] nums, int target) { int[] re = {-1, -1}; int n = erfen(nums, 0, nums.length - 1, target); if (n != -1) { int temp = n; int i = n; while (i < nums.length && nums[temp] == nums[i]) { temp = i; i++; } re[1] = temp; i = n; temp = n; while (i >= 0 && nums[i] == nums[temp]) { temp = i; i--; } re[0] = temp; } return re; } public int erfen(int[] nums, int left, int right, int target) { if (nums.length == 0) { return -1; } if (left > right || target < nums[0] || target > nums[nums.length - 1]) { return -1; } int mid = (left + right) / 2; if (nums[mid] > target) { return erfen(nums, left, mid - 1, target); } else if (nums[mid] < target) { return erfen(nums, mid + 1, right, target); } return mid; } } 