java class Solution { public int[] searchRange(int[] nums, int target) { if (nums == null || nums.length == 0) return new int[]{-1, -1}; int n = nums.length, left = 0, right = n - 1, mid = left + ((right - left) >> 1); boolean find = false; while (left <= right) { mid = left + ((right - left) >> 1); if (nums[mid] > target) right = mid - 1; else if (nums[mid] < target) left = mid + 1; else { find = true; break; } } if (!find) return new int[]{-1, -1}; int l = mid, r = mid; while (l - 1 >= 0 && nums[l] == nums[l - 1]) l--; while (r + 1 <= n - 1 && nums[r] == nums[r + 1]) r++; return new int[]{l, r}; } } 