java class Solution { int ans=-1; public int[] searchRange(int[] nums, int target) { if(nums.length==0){ return new int[]{-1,-1}; } binarySearch(nums,target,0,nums.length-1,true); int min=ans; ans=-1; binarySearch(nums,target,0,nums.length-1,false); int max=ans; return new int[]{min,max}; } public void binarySearch(int [] nums,int target,int left,int right,boolean min){ if(left>right){ return; } int mid=(left+right)>>1; if(nums[mid]==target){ ans=(min? (ans==-1?mid:Math.min(ans,mid)):Math.max(ans,mid)); } if(min){ if(target<=nums[mid]){ binarySearch(nums,target,left,mid-1,min); }else{ binarySearch(nums,target,mid+1,right,min); } }else{ if(target>=nums[mid]){ binarySearch(nums,target,mid+1,right,min); }else{ binarySearch(nums,target,left,mid-1,min); } } } } 