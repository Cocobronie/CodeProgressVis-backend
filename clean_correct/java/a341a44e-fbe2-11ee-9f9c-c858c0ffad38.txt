java class Solution { public int[] searchRange(int[] nums, int target) { int p = leftSearch(nums, target); int q = rightSearch(nums, target); return new int[]{p, q}; } private int leftSearch(int[] nums, int target) { int left = 0; int right = nums.length - 1; while (left <= right) { int mid = left + (right - left) / 2; if (nums[mid] == target) { if (mid == 0 || nums[mid - 1] != target) return mid; else right = mid - 1; } else if (nums[mid] > target) { right = mid - 1; } else { left = mid + 1; } } return -1; } private int rightSearch(int[] nums, int target) { int left = 0; int right = nums.length - 1; while (left <= right) { int mid = left + (right - left) / 2; if (nums[mid] == target) { if ((mid == nums.length - 1) || nums[mid + 1] != target) return mid; else left = mid + 1; } else if (nums[mid] > target) { right = mid - 1; } else { left = mid + 1; } } return -1; } } 