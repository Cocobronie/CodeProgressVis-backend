java class Solution { public int[] searchRange(int[] nums, int target) { if(nums.length == 0) return new int[]{-1,-1}; int left = getLow(nums,target); int right = getHigh(nums,target); if(left>=0 && left <= nums.length-1 && right <= nums.length-1 && nums[left] == target && nums[right] == target){ return new int[]{left,right}; } return new int[]{-1,-1}; } int getLow(int[] nums,int target){ int left = 0, right = nums.length-1; while(left <= right){ int mid = left + (right - left) / 2; if(target <= nums[mid]){ right = mid - 1; }else{ left = mid + 1; } } return left; } int getHigh(int nums[], int target){ int left = 0, right = nums.length-1; while(left <= right){ int mid = left + (right - left) /2; if(target >= nums[mid]){ left = mid + 1; }else{ right = mid - 1; } } return right; } } 