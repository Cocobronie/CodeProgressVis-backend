java class Solution { int left = Integer.MAX_VALUE; int right = Integer.MIN_VALUE;; public int[] searchRange(int[] nums, int target) { int len = nums.length; if(len == 0) return new int[]{-1,-1}; searchIndex(nums, target, 0, len-1); if(left == Integer.MAX_VALUE){ left = -1; } if(right == Integer.MIN_VALUE){ right = -1; } return new int[]{left,right}; } public void searchIndex(int[] nums, int target,int start,int end){ int mid = start + ((end-start)>>1); if(start > end){ return; } if(nums[mid] == target){ if(mid < left){ left = mid; } if(mid > right){ right = mid; } } if(nums[mid] <= target){ searchIndex(nums, target, mid+1, end); } if(nums[mid] >= target){ searchIndex(nums, target, start, mid-1); } return; } } 