java class Solution { public int binarySearch(int[] nums, int target, boolean lower) { int left=0; int right=nums.length-1; int ans=nums.length; while(left<=right){ int mid=(right-left)/2+left; if (nums[mid]>target || (lower && nums[mid]>=target)){ right=mid-1; ans=mid; }else{ left=mid+1; } } return ans; } public int[] searchRange(int[] nums, int target) { int left = binarySearch(nums,target,true); int right = binarySearch(nums,target,false)-1; if(left<=right && right<=nums.length && nums[left]==target && nums[right]==target){ return new int[]{left,right}; } return new int[]{-1,-1}; } } 