java class Solution { public int[] searchRange(int[] nums, int target) { int[] res = new int[]{-1,-1}; int n = nums.length; int l = 0, r = n - 1; binarySearch(nums, l, r, target, res); return res; } public void binarySearch(int[] nums, int l, int r, int target, int[] res){ if (l > r) return; int mid = (l + r) >> 1; if (nums[mid] == target) { if (mid - 1 < 0 || nums[mid - 1] != target) res[0] = mid; else binarySearch(nums, l, mid - 1, target, res); if (mid + 1 >= nums.length || nums[mid + 1] != target) res[1] = mid; else binarySearch(nums, mid + 1, r, target, res); } else if (nums[mid] < target) binarySearch(nums, mid + 1, r, target, res); else binarySearch(nums, l, mid - 1, target, res); } } 