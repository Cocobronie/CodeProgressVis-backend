java class Solution { public int[] searchRange(int[] nums, int target) { if(nums == null || nums.length == 0){ return new int[]{-1,-1}; } int[] result = new int[2]; int left = searchLeftRange(nums,target); int right = searchRightRange(nums,target); result[0] = left; result[1] = right; return result; } public int searchLeftRange(int[] nums,int target){ int left=0, right= nums.length-1; int result = -1; while (left <= right){ int mid = (left + right)/2; if(nums[mid] == target){ result = mid; } if(nums[mid] >= target){ right = mid - 1; } else { left = mid + 1; } } return result; } public int searchRightRange(int[] nums,int target){ int left=0, right= nums.length-1; int result = -1; while (left <= right){ int mid = (left + right)/2; if(nums[mid] == target){ result = mid; } if(nums[mid] <= target){ left = mid + 1; } else { right = mid - 1; } } return result; } } 