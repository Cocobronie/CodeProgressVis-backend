java class Solution { public int[] searchRange(int[] nums, int target) { if(nums == null || nums.length == 0) return new int[]{-1, -1}; int first = getFirst(nums, target); if(nums[first] != target) { return new int[]{-1, -1}; } int second = getSecond(nums, target); return new int[]{first, second}; } public int getFirst(int[] nums, int target) { int left = 0; int right = nums.length - 1; while(left < right) { int mid = left + (right - left) / 2; if(nums[mid] >= target) { right = mid; } else { left = mid + 1; } } return left; } public int getSecond(int[] nums, int target) { int left = 0; int right = nums.length - 1; while(left < right) { int mid = left + (right - left + 1) / 2; if(nums[mid] <= target) { left = mid; } else { right = mid - 1; } } return left; } } 