cpp class Solution { public: vector<int> searchRange(vector<int>& nums, int target) { vector<int> res; int low = -1; int high = -1; if(nums.size() == 0 || nums.size() == 1&& nums[0] != target){ res.push_back(-1); res.push_back(-1); return res; } if(nums.size() == 1 && nums[0] == target){ res.push_back(0); res.push_back(0); return res; } int l = 0; int r = nums.size()-1; while(l <= r){ int middle = (l+r)/2; if(nums[middle] < target)l = middle+1; else if(nums[middle] > target)r = middle-1; else{ if(middle == 0||nums[middle-1] != target){ low = middle;break; } r = middle-1; } } l = 0; r = nums.size()-1; while(l <= r){ int middle = (l+r)/2; if(nums[middle] < target)l = middle+1; else if(nums[middle] > target)r = middle-1; else{ if(middle == nums.size()-1 || nums[middle+1] != target){ high = middle;break; } l = middle+1; } } res.push_back(low); res.push_back(high); return res; } }; 