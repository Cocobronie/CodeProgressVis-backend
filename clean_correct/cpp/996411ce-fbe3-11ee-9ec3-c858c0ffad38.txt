cpp class Solution { public: vector<int> searchRange(vector<int>& nums, int target) { vector<int> res(2,-1); if(nums.size()<1){ return res; } if(nums.size()==1){ if(target==nums[0]){ res[0]=0; res[1]=0; } return res; } res[0]=bl_search(nums,0,nums.size()-1,target); if(res[0]==-1){ res[1]=-1; return res; } res[1]=br_search(nums,res[0],nums.size()-1,target); return res; } private: static int bl_search(vector<int>& nums,int lt,int rt,int target){ int mid=(lt+rt)/2; if(nums[mid]==target){ if(mid==0){ return mid; }else if(nums[mid-1]!=target){ return mid; }else{ return bl_search(nums,lt,mid-1,target); } }else if(lt==rt){ return -1; }else if(nums[mid]>target){ if(mid==0){ return -1; } return bl_search(nums,lt,mid-1,target); }else{ return bl_search(nums,mid+1,rt,target); } } static int br_search(vector<int>& nums,int lt,int rt,int target){ int mid=(lt+rt)/2; if(nums[mid]==target){ if(mid==nums.size()-1){ return mid; }else if(nums[mid+1]!=target){ return mid; }else{ return br_search(nums,mid+1,rt,target); } }else if(lt==rt){ return -1; }else if(nums[mid]>target){ if(mid==nums.size()-1){ return -1; } return br_search(nums,lt,mid-1,target); }else{ return br_search(nums,mid+1,rt,target); } } }; 