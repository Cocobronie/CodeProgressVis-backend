cpp class Solution { public: vector<int> searchRange(vector<int>& nums, int target) { vector<int> ret(2,-1); if(nums.size() == 0) return ret; ret[0] = findFirstTargetIndex(nums, target); ret[1] = findLastTargetIndex(nums, target); return ret; } int findFirstTargetIndex(vector<int>& nums, int target){ int left = 0; int right = nums.size()-1; while(left < right){ int mid = left + (right-left) / 2; if(nums[mid] < target){ left = mid+1; }else{ right = mid; } } if(nums[left] == target){ return left; } return -1; } int findLastTargetIndex(vector<int>& nums, int target){ int left = 0; int right = nums.size()-1; while(left < right){ int mid = left + (right-left) / 2; if(nums[mid] > target){ right = mid - 1; }else{ if(right==left+1){ if(nums[right] == target){ left++; }else{ right--; } }else{ left = mid; } } } if(nums[left] == target){ return left; } return -1; } }; 