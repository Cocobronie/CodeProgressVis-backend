cpp class Solution { public: vector<int> searchRange(vector<int>& nums, int target) { vector<int>ans; int n=nums.size(); int left=0; int right=n-1; while (left <= right) { int mid = left + (right - left) / 2; if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] > target) { right = mid - 1; } else if (nums[mid] == target) { right = mid - 1; } } if (left >= n || nums[left] != target) ans.push_back(-1); else ans.push_back(left); left=0; right=n-1; while (left <= right) { int mid = left + (right - left) / 2; if (nums[mid] < target) { left = mid + 1; } else if (nums[mid] > target) { right = mid - 1; } else if (nums[mid] == target) { left = mid + 1; } } if (right < 0 || nums[right] != target) ans.push_back( -1); else ans.push_back( right); return ans; } }; 