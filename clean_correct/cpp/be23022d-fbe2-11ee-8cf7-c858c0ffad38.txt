cpp class Solution { public: vector<int> searchRange(vector<int>& nums, int target) { int left = 0, right = nums.size() - 1; int idx = -1; vector<int> res(2, -1); if (nums.size() == 1 && target == nums[0]) return vector<int>{0, 0}; while (left <= right) { int mid = left + (right - left)/2; if (nums[mid] == target) { int tmpLeft = left, tmpRight = right; while (tmpLeft < tmpRight) { int tmpMid = tmpLeft + (tmpRight - tmpLeft) / 2; if (target <= nums[tmpMid]) tmpRight = tmpMid; else tmpLeft= tmpMid + 1; } res[0] = tmpLeft; tmpLeft = left; tmpRight = right; while (tmpLeft < tmpRight) { int tmpMid = tmpLeft + (tmpRight - tmpLeft) / 2 + (tmpRight - tmpLeft) % 2 ; if (nums[tmpMid] <= target) tmpLeft = tmpMid; else tmpRight = tmpMid - 1; } res[1] = tmpLeft; break; } if (nums[mid] < target) left = mid + 1; else right = mid - 1; } return res; } }; 