cpp
class Solution {
public:
    
    int left(vector<int>& nums, int target)
    {
        int left=0,right=nums.size()-1,mid,al,ar;
        while(left<=right)
        {
            mid=left+(right-left)/2;
            if(nums[mid]>target) right=mid-1;
            else if(nums[mid]<target) left=mid+1;
            else if(nums[mid]==target) right=mid-1;
        }
        if(left>=nums.size()||nums[left]!=target) return -1;
        else return left;
    }

    int right(vector<int>& nums, int target)
    {
        int left=0,right=nums.size()-1,mid,al,ar;
        while(left<=right)
        {
            mid=left+(right-left)/2;
            if(nums[mid]>target) right=mid-1;
            else if(nums[mid]<target) left=mid+1;
            else if(nums[mid]==target) left=mid+1;
        }
        if(right<0||nums[right]!=target) return -1;
        else return left-1;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size()==0)
        {
            return{-1,-1};
        }
        return {left(nums,target),right(nums,target)}; 


    }
};

