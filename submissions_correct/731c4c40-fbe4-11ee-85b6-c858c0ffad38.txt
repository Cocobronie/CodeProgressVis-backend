java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] start_end = {-1, -1};
        //没有元素时
        if(nums.length == 0)
            return start_end;
        int l = 0, r = nums.length - 1;
        //找最左边的符合条件的值
        while(l < r){
            int m = l + (r - l) / 2;
            if(nums[m] < target)  
                l = m + 1;
            else if(nums[m] >= target)  //找最左边的，所以加等号
                r = m;
        }
        //不存在
        if(nums[l] != target)
            return start_end;
        //找最右边的
        int start = l, end = start;
        while((end != nums.length - 1) && nums[end + 1] == nums[start])
            end++;
        start_end[0] = start;
        start_end[1] = end;
        return start_end;
    }
}

