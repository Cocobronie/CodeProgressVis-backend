cpp
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        //基础做法
        // vector<int> res;
        // int exist = 0;
        // int right = 0;
        // for(int i = 0;i < nums.size();i++){
        //     if(nums[i] == target){
        //         if(exist == 0){
        //             exist = 1;
        //             right = i;
        //             res.push_back(i);
        //         }
        //         else{
        //             right = i;
        //         }
        //     } 
        // }
        // if(exist == 0){
        //     res.push_back(-1);
        //     res.push_back(-1);
        // }
        // else{
        //     res.push_back(right);
        // }
        // return res;

        //进阶做法：O(logn)
        vector<int> res;
        int low = -1;
        int high = -1;
        if(nums.size() == 0 || nums.size() == 1&& nums[0] != target){
            res.push_back(-1);
            res.push_back(-1);
            return res;
        }
        if(nums.size() == 1 && nums[0] == target){
            res.push_back(0);
            res.push_back(0);
            return res;
        }
        int l = 0;
        int r = nums.size()-1;
        while(l <= r){
            int middle = (l+r)/2;
            if(nums[middle] < target)l = middle+1;
            else if(nums[middle] > target)r = middle-1;
            else{
                if(middle == 0||nums[middle-1] != target){
                    low = middle;break;
                } 
                r = middle-1;
            }
        }
        l = 0;
        r = nums.size()-1;
        while(l <= r){
            int middle = (l+r)/2;
            if(nums[middle] < target)l = middle+1;
            else if(nums[middle] > target)r = middle-1;
            else{
                if(middle == nums.size()-1 || nums[middle+1] != target){
                    high = middle;break;
                }
                l = middle+1;
            }
        }
        res.push_back(low);
        res.push_back(high);
        return res;
    }
};

