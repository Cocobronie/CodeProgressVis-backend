cpp
class Solution {
public:
    /*  转换为搜索目标值的左侧位置
    n[m] >= target: r = m;
    else: l = m + 1;
    */
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size() == 0) return {-1, -1};
        int first = findFirst(nums, target);
        int last = findFirst(nums, target + 1);
        vector<int> res{-1, -1};
        if(nums[first] == target){
            res[0] = first;
            if(nums[last]==target)  // 如果找到的是大于target的值，就-1，否则就是不减（自己做一下实验就知道了）
                res[1] = last;
            else
                res[1] = last - 1;
        } 
        return res;
    }
    int findFirst(vector<int>& nums, int target) {
        int l=0, r=nums.size()-1;
        while(l < r){
            int m = l + (r - l) / 2;
            if(nums[m] >= target) // 可以得出，找到的是大于等于target的值
                r = m;
            else
                l = m + 1;
        }
        return l;
    }
};

