java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int left=0;
        int right=nums.length-1;
        int []ret=new int[]{-1,-1};
        if(nums.length==0){return ret;}
        while(left<=right){
            int i =(left+right)/2;
            // System.out.printf("left %s right %s i %s\n",left,right,i);
            if(nums[i]<target){
                left=i+1;
            }else{
                if(nums[i]>target){
                    right=i-1;
                }
                else{
                    ret[0]=find_first_not(nums,left,i,target,1);
                    ret[1]=find_first_not(nums,right,i,target,-1);
                    break;
                }
            }

        }
        return ret;
    }
    private int find_first_not(int [] nums,int start ,int end,int target, int step){
        while(start!=end){
            // System.out.printf("start %s end %s\n",start,end);
            int i = (start+end-step)/2;
            if(nums[i]!=target){
                start=i+step;
            }else{
                end=i;
            }
        }
        return end;
    }       
}

