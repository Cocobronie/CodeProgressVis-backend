java
class Solution {
    int start = -1, end = -1;
    public int[] searchRange(int[] nums, int target) {
        binarySearchGetFirst(nums,target,0,nums.length-1);
        binarySearchGetLast(nums,target,0,nums.length-1);
        int[] res = new int[2];
        res[0] = start;
        res[1] = end;
        return res;       
    }

    public void binarySearchGetFirst(int[] nums,int target,int left,int right){
        while(left<=right){
            int mid = (left+right)/2;
            if(nums[mid]==target){
                start = mid;
                right = mid-1;
            }else if(nums[mid]<target){
                left = mid+1;
            }else{
                right = mid-1;
            }
        }
    }

    public void binarySearchGetLast(int[] nums,int target,int left,int right){
        while(left<=right){
            int mid = (left+right)/2;
            if(nums[mid]==target){
                end = mid;
                left = mid+1;
            }else if(nums[mid]<target){
                left = mid+1;
            }else{
                right = mid-1;
            }
        }
    }  
}

