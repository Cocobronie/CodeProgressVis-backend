java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        // 1.特例
        if (nums == null || nums.length == 0){
            return new int[]{-1, -1};
        }
        // 2.先查找初始位置
        int length = nums.length;
        int left = 0;
        int right = length - 1;
        while (left < right){
            int mid = left + (right - left) / 2; //中点划分左边，找初始位置
            if (nums[mid] < target){
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        // 3.确定初始位置索引
        int first = nums[left] == target ? left : -1;
        // 4.缩小初始区间，查找结束位置[left, length - 1]，此时left处于初始位置
        right = length - 1;
        while (left < right){
            int mid = left + (right - left + 1) / 2; // 中点划分右边
            if (nums[mid] > target){
                right = mid - 1;
            } else {
                left = mid;
            }
        }
        // 5.确定结束位置索引
        int last = nums[left] == target ? left : -1;
        return new int[]{first, last};
    }
}

