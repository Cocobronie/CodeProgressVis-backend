cpp
class Solution {
public:
    int FindPos(vector<int>& nums, int left, int right, int target, bool is_left)
    {
        while(left <= right)
        {
            int mid = (left + right) /2;
            if(nums[mid] > target)
            {
                right =mid-1;
            }
            else if(nums[mid] < target)
            {
                left = mid+1;
            }
            else
            {
                if (is_left)
                {
                    if(mid == 0 or (mid > 0 && nums[mid - 1] < target))
                {
                    return mid;
                }
                right = mid - 1;

                }
                else
                {
                    if(mid == nums.size() - 1 or ( mid < nums.size() -1 && nums[mid + 1] > target))
                {
                    return mid;
                }
                left = mid+1;
                }
                
            }
        }
        return -1;
    }

    vector<int> searchRange(vector<int>& nums, int target) {
        int len = nums.size();
        vector<int> res({-1, -1});
        int left_pos = FindPos(nums, 0, len-1, target, true);
        int right_pos = FindPos(nums, 0, len-1, target, false);
        if(left_pos != -1 && right_pos != -1)
        {
            res[0] = left_pos;
            res[1] = right_pos;
        }
        return res;
    }
};

