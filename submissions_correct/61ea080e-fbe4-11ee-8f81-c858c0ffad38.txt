java
class Solution {
    public static int[] searchRange(int[] nums, int target) {
        int[] returnNums = {-1,-1};
        if(nums.length == 0)
        {
            return returnNums;
        }
        int left = 0;
        int right = nums.length;
        int checkpoint = -1;
        while(left<right)//二分查找数据
        {
        	int mid = (right-left)/2 + left;
        	if(target>nums[mid])
        	{
        		left = mid+1;
        	}else if(target < nums[mid])
        	{
        		right = mid;
        	}else
        	{
        		checkpoint = mid;
        		break;
        	}
        }
        if(checkpoint == -1)//判断 如果没找到直接返回
        {
        	return returnNums;
        }else
        {
        	for(int i=checkpoint;i>=0;i--)//前端查找
        	{
        		if(nums[i]!=target)
        		{
        			returnNums[0] = i+1;
        			break;
        		}
        		
        		if(i== 0 ||nums[i]==target)
        		{
        			returnNums[0] = i;
        		}
        	}
        	
        	for(int i=checkpoint;i<nums.length;i++)//后端查找
        	{
        		if(nums[i]!=target)
        		{
        			returnNums[1] = i-1;
        			break;
        		}
        		
        		if(i==(nums.length-1)||nums[i]==target)
        		{
        			returnNums[1] = i;
        		}
        	}
        	return returnNums;
        }
    }
}

