java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans=new int[2];
        ans[0]=findFirst(nums,target);
        ans[1]=findLast(nums,target);
        return ans;

    }
    public  int findFirst(int[] arr, int target) {
        int left = 0;
        int right = arr.length;
        int ans = -1;
        while (left < right) {
            int mid = (right - left) / 2 + left;
            if (arr[mid] == target) {
                ans = mid;
                if (mid == 0 || arr[mid - 1] != target) {
                    break;
                }
                right = mid;
            } else if (arr[mid] > target) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }

    public  int findLast(int[] arr, int target) {
        int left = 0;
        int right = arr.length;
        int ans = -1;
        while (left < right) {
            int mid = (right - left) / 2 + left;
            if (arr[mid] == target) {
                ans = mid;
                if (mid == arr.length - 1 || arr[mid + 1] != target) {
                    break;
                }
                left = mid + 1;
            } else if (arr[mid] > target) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }
}

