java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums.length==0) return new int [] {-1,-1};
        int first=firstsearch(nums,target);
        if(first==-1) return new int [] {-1,-1};
        int last=lastsearch(nums,target);
        return new int [] {first,last};
    }
    public int firstsearch(int[] nums,int target){
        int left=0;
        int right=nums.length-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target) right=mid-1;
            else if(nums[mid]<target) left=mid+1;
            else right=mid-1;
        }
        if(left!=nums.length&&nums[left]==target) return left;
        return -1;
    }
    public int lastsearch(int[] nums,int target){
        int left=0;
        int right=nums.length-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target) left=mid+1;
            else if(nums[mid]<target) left=mid+1;
            else right=mid-1;
        }
        return right;
    }
}


