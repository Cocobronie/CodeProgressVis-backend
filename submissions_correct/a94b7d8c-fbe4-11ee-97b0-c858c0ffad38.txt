cpp
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.empty()) return vector<int> {-1,-1};
        int l = lower_bound(nums,target);
        int r = upper_bound(nums,target) - 1;
        if(l == nums.size() || nums[l] != target) return vector<int> {-1,-1};
        return vector<int> {l,r};
    }

    int lower_bound(vector<int> &nums, int target) {
        int l = 0, r = nums.size(), mid;
        while(l < r) {
            mid = (l+r)/2;
            if(nums[mid] >= target) r = mid;
            else l = mid+1;
        }
        return l;
    }

    int upper_bound(vector<int> &nums, int target) {
        int l = 0, r = nums.size(), mid;
        while(l < r) {
            mid = (l+r)/2;
            if(nums[mid] > target) r = mid;
            else l = mid+1;
        }
        return l;
    }
};

