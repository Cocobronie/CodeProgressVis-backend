
class Solution {
public:


    vector<int> searchRange(vector<int>& nums, int target) {
        //经典二分查找
        //首先查找左边界
        if(nums.size() == 0) return {-1,-1};

        int l = 0, r = nums.size() - 1;
        vector<int> res;
        while(l < r){
            int mid = l + r >> 1;
            if(nums[mid] >= target){
                r = mid;
            }else{
                l = mid + 1;
            }
        }
        if(nums[l] != target) return {-1, -1};
        res.push_back(l);

        //查找右边界
        l = 0; r = nums.size() - 1;
        while(l < r){
            int mid = l + r + 1 >> 1;
            if(nums[mid] <= target){
                l = mid;
            }else{
                r = mid - 1;
            }
        }
        res.push_back(l);

        return res;
    }
};

