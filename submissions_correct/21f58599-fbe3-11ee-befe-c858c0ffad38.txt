javascript
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var searchRange = function(nums, target) {
    let l = 0 ;
    let r = nums.length-1;
    while(l<=r){
        let mid = Math.floor((l+r)/2);
        //如果nums[mid]===target ,也就是找到了,需要往两边扩散,找到第一次和最后一次出现target的下标
        if(nums[mid]===target){
            let i = mid-1
            for(;i>=0;i--){
                if(nums[i] != target) break;
            }
            let j = mid+1;
            for(;j<nums.length;j++){
                if(nums[j]!=target) break;
            }
            return [i+1,j-1];
        }
        //若nums[mid] > target 这就是正常的二分查找
        else if(nums[mid]>target){
            r= mid-1;
        }
        else{
            l++;
        }
    }
    return [-1,-1];
};

