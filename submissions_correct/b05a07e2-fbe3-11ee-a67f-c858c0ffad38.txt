

class Solution:
    def searchRange(self, nums, target: int):
        if len(nums) == 0:
            return [-1, -1]

        return [ self.getLeft(nums, 0,  len(nums)-1, target), self.getRight(nums,0,len(nums)-1, target)]

    def getLeft(self, nums, left, right,target):

        #递归出口
        if left >= right:
            return left if nums[left] == target else -1

        mid = int((left+right)/2) #这里mid应该是向左靠的
        if nums[mid] == target and nums[mid-1] != target:
            return mid
        # 递归入口
        if nums[mid] < target:
            return self.getLeft(nums,mid+1, right,target)
        else:
            return self.getLeft(nums,left,mid-1,target)

    def getRight(self,nums,left,right,target):
        if left >= right:
            return left if nums[left] == target else -1
        mid = int((left + right) / 2)  # 这里mid应该是向左靠的

        if nums[mid] == target and nums[mid+1]!=target:
            return mid
        if nums[mid] > target:
            return self.getRight(nums,left,mid-1,target)
        else:
            return self.getRight(nums,mid+1,right,target)


