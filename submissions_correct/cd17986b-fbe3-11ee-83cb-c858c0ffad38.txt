java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        // //method1:暴力解法
        // int len = nums.length;
        // if(len == 1 && nums[0] == target){
        //     int[] ans = {0, 0};
        //     return ans;
        // }
        // int[] ans = {-1, -1};
        // boolean flag = false;
        // for(int i = 0; i < len; i++){
        //     if(nums[i] == target && !flag){
        //         ans[0] = i;
        //         flag = true;
        //     }
        //     if(nums[i] == target && flag){
        //         ans[1] = i;
        //     }
        // }
        // return ans;

        // method2:二叉查找
        int len = nums.length;
        if(len == 1 && nums[0] == target){
            int[] ans = {0, 0};
            return ans;
        }
        int[] ans = {-1, -1};
        int l = 0, r = len - 1;
        while(l <= r){
            int mid = l + (r - l) / 2;
            if(nums[mid] == target){
                ans[0] = mid;
                ans[1] = mid;
                break;
            }else if(nums[mid] < target){
                l = mid + 1;
            }else{
                r = mid - 1;
            }
        }
        if(ans[0] == -1){
            return ans;
        }else{
            for(int i = ans[0]; i >= 0 && nums[i] == target; i--){
                ans[0] = i;
            }
            for(int i = ans[1]; i < len && nums[i] == target; i++){
                ans[1] = i;
            }
        }
        return ans;
    }
}

