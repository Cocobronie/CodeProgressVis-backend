
class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums.length==0)return new int[]{-1,-1};
        int i = search(nums,target,0,nums.length-1);
        if(i==-1)return new int[]{-1,-1};
        int start=i-1;
        while(true&&start>=0){
            if(nums[start]!=target){
                break;
            }
            start--;
        }
        int end=i+1;
        while(true&&end<nums.length){
            if(nums[end]!=target){
                break;
            }
            end++;
        }
        return new int[]{start+1,end-1};
    }
    private int search(int[] nums, int target, int start, int end){
        if(start==end){
            if(target==nums[start]){
                return start;
            }else{
                return -1;
            }
        }
        int mid = (start+end)/2;
        if(target==nums[mid]){
            return mid;
        }else if(target>nums[mid]&&end>mid){
            return search(nums,target,mid+1,end);
        }else if(target<nums[mid]&&mid>start){
            return search(nums,target,start,mid-1);
        }else{
            return -1;
        }
        
    }
}

