
public int[] searchRange(int[] nums, int target) {
        int left = findLeft(nums,target);
        int right = findRight(nums,target);
        return new int[]{left,right};
    }
    public int findLeft(int[] nums, int target){
        int i=0,j=nums.length-1;
        while(i<=j){
            int mid=i+(j-i)/2;
            if(nums[mid]==target){
                if(mid==0 || nums[mid-1]!=nums[mid])return mid;
                j=mid-1;
            }else if(nums[mid]>target){
                j=mid-1;
            }else{
                i=mid+1;
            }
        }
        return -1;
    }
    public int findRight(int[] nums, int target){
        int i=0,j=nums.length-1;
        while(i<=j){
            int mid=i+(j-i)/2;
            if(nums[mid]==target){
                if(mid==nums.length-1 || nums[mid+1]!=nums[mid])return mid;
                i=mid+1;
            }else if(nums[mid]>target){
                j=mid-1;
            }else{
                i=mid+1;
            }
        }
        return -1;
    }

