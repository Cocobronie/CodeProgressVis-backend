java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        //二分查找，分别找两个分界点
        int l = 0;
        int r = nums.length - 1;
        int m = 0;
        int [] index = {-1, -1};
        while(l <= r){
            m = (l + r) / 2;
            if(nums[m] == target){
                if(0 == m || nums[m - 1] < target){
                    index[0] = m;
                    break;
                }
                else{
                    r = m - 1;
                }
            }
            else if(nums[m] > target){
                r = m - 1;
            }
            else{
                l = m + 1;
            }
        }
        if(index[0] == -1){
            return index;
        }
        l = 0;
        r = nums.length - 1;
        while(l <= r){
            m = (l + r) / 2;
            if(nums[m] == target){
                if(nums.length - 1 == m || nums[m + 1] > target){
                    index[1] = m;
                    return index;
                }
                else{
                    l = m + 1;
                }
            }
            else if(nums[m] > target){
                r = m - 1;
            }
            else{
                l = m + 1;
            }
        }
        return index;
    }
}

