java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int n=nums.length;
        if(n==0) return new int[]{-1,-1};
        int val=recursionBinarySearch(nums,target,0,n-1);
        if(val<0) return new int[]{-1,-1};
        int right=val;
        while(right<n&&nums[right]==target){
            right++;
        }
        int left=val;
        while(left>=0&&nums[left]==target){
            left--;
        }
        return new int[]{left+1,right-1};
    }
    public int recursionBinarySearch(int[] arr,int key,int low,int high) {
        if(key<arr[low]||key>arr[high]||low>high) return -1;
        int mid=(low+high)/2;
        if(arr[mid]>key) return recursionBinarySearch(arr,key,low,mid-1);
        else if(arr[mid]<key) return recursionBinarySearch(arr,key,mid+1,high);
        else return  mid;
    }
}

