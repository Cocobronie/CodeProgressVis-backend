
public class Solution {
    public int[] searchRange (int[] A, int target) {
        int[] res = new int[2];
        int low = 0, high = A.length-1;
        int left = findFirst(A, low, high, target);
        int right = findLast(A, low, high, target);
        res[0] = left;
        res[1] = right;
        return res;
    }
    
    public int findFirst(int[] A,int low, int high, int target){
        while(low <= high){
            int mid = low+(high-low)/2;
            if(A[mid] == target){
                if(mid == 0 || A[mid-1]<A[mid]){
                    return mid;
                }else{
                    high = mid-1;
                }        
            }else if(A[mid] < target){
               low = mid+1; 
            }else{
                high = mid-1;
            }
        }
        return -1;
    }
    
    public int findLast(int[] A,int low, int high, int target){
        while(low <= high){
            int mid = low+(high-low)/2;
            if(A[mid] == target){
                if(mid == A.length-1 || A[mid] <A[mid+1]){
                    return mid;
                }else{
                    low = mid+1;
                }
            }else if(A[mid] < target){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        return -1;
    }
    
}

