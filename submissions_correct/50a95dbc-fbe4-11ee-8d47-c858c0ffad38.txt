javascript
// 又是二分法 草了 找左边界和右边界
var binarySearch = function(nums, target, isLeft) { // isLeft   true代表找的左边界  false代表找的是右边界
  let left = 0, right = nums.length - 1
  while (left <= right) {
    let mid = left + Math.floor((right - left) / 2)
    if (nums[mid] === target) {
      // 1.寻找左边界 就要收缩右边界
      // 2.寻找右边界 就要收缩左边界
      isLeft ? right = mid - 1 : left = mid + 1
    } else if (nums[mid] > target) {
      right = mid - 1
    } else if (nums[mid] < target) {
      left = mid + 1
    }
  }
  if (isLeft) {
    if (nums[left] !== target && left >= nums.length) return -1
  } else {
    if (nums[right] !== target && right < 0) return -1
  }
  return isLeft ? left : right
}

var searchRange = (nums, target) => {
  let res = [-1, -1]
  const leftIndex = binarySearch(nums, target, true)
  const rightIndex = binarySearch(nums, target, false)
  
  // 判断条件
  if (leftIndex <= rightIndex && leftIndex >= 0 && rightIndex < nums.length) res = [leftIndex, rightIndex]
  return res
}

