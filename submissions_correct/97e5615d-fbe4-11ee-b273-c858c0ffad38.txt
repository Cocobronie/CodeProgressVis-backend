
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int i=0,j=nums.size()-1;
        int min,max,mid;
        vector<int>result={-1,-1};
        while(i<=j)
        {
            mid=i+(j-i)/2;
            if(nums[mid]==target)
            {
                max=mid;
                min=mid;
                int l=min;                          //设置临时值保存运算前的结果，以排除越界情况
                int r=max;
                while(min>=0)                       //不以nums的值作为条件判断，减少分类讨论的压力
                {
                    if(nums[min]!=target)
                        break;
                    else                            //等于target时保存当前的下标
                    {
                        l=min;
                        min--;
                    }
                }
                while(max<=nums.size()-1)
                {
                    if(nums[max]!=target)
                        break;
                    else 
                    {
                        r=max;
                        max++;
                    }
                }
                result[0]=l;
                result[1]=r;
                break;
            }
            else if(nums[mid]>target)
            {
                j=mid-1;
            }
            else if(nums[mid]<target)
            {
                i=mid+1;
            }
        }
        return result;
    }
};

