java
class Solution {
    public int[] searchRange(int[] nums, int target) {
         int left = 0;
        int right = nums.length - 1;
        while (left <= right) {//二分法
            int mid = left + ((right - left) >> 1);
            if (nums[mid] > target) {
                right = mid - 1;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else if (nums[mid] == target) {//找到
            //思路：把找到的第一个值当作起点，再往两边遍历找端点
                int indexR = mid;
                int indexL = mid;
                while (++indexR < nums.length && nums[indexR] == target) {}
                while (--indexL >= 0 && nums[indexL] == target) {}
                return new int[]{++indexL, --indexR};
            } else {//没找到
                break;
            }
        }
        return new int[]{-1, -1};
    }
}

